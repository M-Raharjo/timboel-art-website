{{/* setup variables to get the csv*/}}

{{ $url := "https://docs.google.com/spreadsheets/d/e/2PACX-1vRJyX0ywELAPAIkpCVYW7f7NN6C79U218HxOsDC46AVCbeotH_dhZtJxbE3Ae7b9E7YFTeJCzJQEuQ9/pub?gid=640230847&single=true&output=csv" }}
{{ $rows := slice }}
{{/* opts is the options for the transform unmarshall */}}
{{ $opts := dict "format" "csv" "targetType" "map" "delimiter" "," "lazyQuotes" true }}

{{/* get the remote resources */}}

{{with try (resources.GetRemote $url) }}
    {{with .Err }}
        {{ errorf "unable to get remote resource %s" $url . }}
    {{else with .Value }}
        {{ $rows = transform.Unmarshal $opts .}}
    {{ else }}
        {{ errorf "unable to get remote resource %s" $url }}
    {{ end }}
{{ end }}

{{/* Loop through all the rows but skipping the header */}}



{{ range $rows }}
    {{ $draftRaw := printf "%v" .draft }}
    {{ $draft := in (slice "true" "1" "yes" "y") (lower (trim $draftRaw " ")) }}
    {{ $item_id := .item_id }}
    {{ if not $item_id }}{{ continue }}{{ end }} {{/* skip blank */}}
    {{ $internal_name := .internal_name }}
    {{ $external_name := .external_name }}
    {{ $material := .material }}
    {{ $size := .size }}
    {{ $finishing := .finishing }}
    {{ $description := .description }}
    {{ $featured_image := trim (replace (printf "%v" .featured_image) `"` ``) " " }}

    {{ $collection := slice }}
    {{ range (split (or .collection "") "|") }}
        {{ $v := trim . " " }}{{ if $v }}{{ $collection = $collection | append $v }}{{ end }}
    {{ end }}

    
    {{ $tag := slice }}
    {{ range (split (or .tag "") "|") }}
        {{ $v := trim . " " }}{{ if $v }}{{ $tag = $tag | append $v }}{{ end }}
    {{ end }}


    {{ $gallery := slice }}
    {{ range (split (or .gallery "") "|") }}
        {{ $v := trim . " " }}{{ if $v }}{{ $gallery = $gallery | append $v }}{{ end }}
    {{ end }}

{{/* Build the Parameters for the template */}}
{{ $params := dict 
    "item_id"           $item_id
    "internal_name"     $internal_name
    "external_name"     $external_name
    "material"          $material
    "size"              $size
    "finishing"         $finishing
    "description"       $description
    "featured_image"    $featured_image
    "collection"        $collection
    "tag"               $tag
    "gallery"           $gallery
    }}


{{/* getting the decsription as markdown content */}}
{{ $body := $description }}
{{ $content := dict "mediaType" "text/markdown" "value" $body }}

{{ $page := dict 
    "path"          $item_id
    "title"         (cond (ne $external_name "") $external_name $internal_name)
    "draft"         $draft
    "kind"          "page"
    "type"          "products"
    "params"        $params
    "content"       $content
    }}

{{ $.AddPage $page }}
{{ end }}